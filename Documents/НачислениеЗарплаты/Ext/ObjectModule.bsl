
Процедура Рассчитать() Экспорт
	
	НачатьТранзакцию();
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДопНачисления.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	КОНЕЦПЕРИОДА(НачислениеЗарплатыОсновныеНачисления.ДатаОкончания, ДЕНЬ) КАК ПериодДействияКонец,
	|	НачислениеЗарплатыОсновныеНачисления.График,
	|	НачислениеЗарплатыОсновныеНачисления.НомерСтроки
	|ПОМЕСТИТЬ ТабЧастьОклад
	|ИЗ
	|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчетаОклад
	|	И НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабЧастьОклад.Сотрудник,
	|	ТабЧастьОклад.ВидРасчета,
	|	ТабЧастьОклад.ПериодДействияНачало,
	|	ТабЧастьОклад.ПериодДействияКонец,
	|	&ПериодРегистрации,
	|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Параметр,
	|	ТабЧастьОклад.График,
	|	ТабЧастьОклад.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТабЧастьОклад КАК ТабЧастьОклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
	|				&ПериодРегистрации,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ТабЧастьОклад.Сотрудник
	|					ИЗ
	|						ТабЧастьОклад КАК ТабЧастьОклад)) КАК СведенияОСотрудникахСрезПоследних
	|		ПО ТабЧастьОклад.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабЧастьПремияСРассчитаннымСтажом.Сотрудник,
	|	ТабЧастьПремияСРассчитаннымСтажом.ВидРасчета,
	|	&ПериодРегистрации,
	|	ЕСТЬNULL(ПроцентыПремии.Процент, 0) КАК Параметр,
	|	ТабЧастьПремияСРассчитаннымСтажом.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ТабЧастьПремияСРассчитаннымСтажом.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ТабЧастьПремияСРассчитаннымСтажом.Стаж КАК Стаж,
	|	ТабЧастьПремияСРассчитаннымСтажом.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачислениеЗарплатыДопНачисления.Сотрудник КАК Сотрудник,
	|		НачислениеЗарплатыДопНачисления.ВидРасчета КАК ВидРасчета,
	|		&ПериодРегистрации КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК БазовыйПериодКонец,
	|		РАЗНОСТЬДАТ(НачислениеЗарплатыДопНачисления.Сотрудник.ДатаПриема, &ПериодРегистрации, ГОД) + НачислениеЗарплатыДопНачисления.Сотрудник.НачальныйСтаж КАК Стаж,
	|		НачислениеЗарплатыДопНачисления.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.НачислениеЗарплаты.ДопНачисления КАК НачислениеЗарплатыДопНачисления
	|	ГДЕ
	|		НачислениеЗарплатыДопНачисления.Ссылка = &Ссылка
	|		И НачислениеЗарплатыДопНачисления.ВидРасчета = &ВидРасчетаПремия) КАК ТабЧастьПремияСРассчитаннымСтажом
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентыПремии КАК ПроцентыПремии
	|		ПО ТабЧастьПремияСРассчитаннымСтажом.Стаж >= ПроцентыПремии.СтажОт
	|			И ТабЧастьПремияСРассчитаннымСтажом.Стаж < ПроцентыПремии.СтажДо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
				 
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ВидРасчетаПремия", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(Дата));
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты [1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
	
	Выборка = Результаты[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ДопНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
	
	Движения.Записать();
	
	Расчет.РассчитатьНачисления(Ссылка, ОсновныеНачисления, ДопНачисления);   
	
	Движения.ОсновныеНачисления.Очистить();
	Движения.ОсновныеНачисления.Записать();
	
	Движения.ДопНачисления.Очистить();
	Движения.ДопНачисления.Записать();
	
	ЗафиксироватьТранзакцию();    				 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	
	ПериодРегистрации = НачалоМесяца(Дата);
	КонецБазовогоПериодаПремии = КонецМесяца (Дата);
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Результат = ТекСтрокаОсновныеНачисления.Результат;
		Движение.График = ТекСтрокаОсновныеНачисления.График;
		Движение.Параметр = ТекСтрокаОсновныеНачисления.Параметр;
	КонецЦикла;

	// регистр ДопНачисления
	Движения.ДопНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаДопНачисления Из ДопНачисления Цикл
		Движение = Движения.ДопНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДопНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = ПериодРегистрации;
		Движение.БазовыйПериодКонец = КонецБазовогоПериодаПремии;
		Движение.Сотрудник = ТекСтрокаДопНачисления.Сотрудник;
		Движение.Результат = ТекСтрокаДопНачисления.Результат;
		Движение.Параметр = ТекСтрокаДопНачисления.Параметр;
		Движение.Стаж = ТекСтрокаДопНачисления.Стаж;
	КонецЦикла;

КонецПроцедуры


